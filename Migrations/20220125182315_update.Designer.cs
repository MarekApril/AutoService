// <auto-generated />
using AutoServis.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AutoServis.Migrations
{
    [DbContext(typeof(AutoServiceDbContext))]
    [Migration("20220125182315_update")]
    partial class update
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("AutoServis.Entities.Adres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Miejscowosc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poczta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ulica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Adresy");
                });

            modelBuilder.Entity("AutoServis.Entities.Kontrahent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AdresId")
                        .HasColumnType("int");

                    b.Property<string>("KontrahentNazwa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdresId");

                    b.ToTable("Kontrahenci");
                });

            modelBuilder.Entity("AutoServis.Entities.Mechanik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AdresId")
                        .HasColumnType("int");

                    b.Property<string>("Imie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdresId");

                    b.ToTable("Mechanicy");
                });

            modelBuilder.Entity("AutoServis.Entities.Samochod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImieKlienta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MechanikId")
                        .HasColumnType("int");

                    b.Property<string>("NazwiskoKlienta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumerRejestracyjny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pojemnosc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonKlienta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MechanikId");

                    b.ToTable("Samochody");
                });

            modelBuilder.Entity("AutoServis.Entities.Zamowienie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Cena")
                        .HasColumnType("decimal(9,2)");

                    b.Property<int>("Ilosc")
                        .HasColumnType("int");

                    b.Property<string>("NazwaTowaru")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zamowienia");
                });

            modelBuilder.Entity("AutoServis.Entities.Kontrahent", b =>
                {
                    b.HasOne("AutoServis.Entities.Adres", "Adres")
                        .WithMany()
                        .HasForeignKey("AdresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adres");
                });

            modelBuilder.Entity("AutoServis.Entities.Mechanik", b =>
                {
                    b.HasOne("AutoServis.Entities.Adres", "Adres")
                        .WithMany()
                        .HasForeignKey("AdresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adres");
                });

            modelBuilder.Entity("AutoServis.Entities.Samochod", b =>
                {
                    b.HasOne("AutoServis.Entities.Mechanik", "Mechanik")
                        .WithMany()
                        .HasForeignKey("MechanikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mechanik");
                });
#pragma warning restore 612, 618
        }
    }
}
